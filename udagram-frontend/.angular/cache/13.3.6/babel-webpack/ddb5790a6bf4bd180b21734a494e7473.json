{"ast":null,"code":"import _classCallCheck from \"F:\\\\New folder (17)\\\\nd0067-c4-deployment-process-project-starter\\\\udagram\\\\udagram-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"F:\\\\New folder (17)\\\\nd0067-c4-deployment-process-project-starter\\\\udagram\\\\udagram-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-b3eecb14.js';\nimport { b as getIonMode } from './ionic-global-f1ce4d2d.js';\nimport { j as inheritAttributes } from './helpers-4d272360.js';\nvar imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nvar Img = /*#__PURE__*/function () {\n  function Img(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Img);\n\n    registerInstance(this, hostRef);\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n    this.ionError = createEvent(this, \"ionError\", 7);\n    this.inheritedAttributes = {};\n\n    this.onLoad = function () {\n      _this.ionImgDidLoad.emit();\n    };\n\n    this.onError = function () {\n      _this.ionError.emit();\n    };\n  }\n\n  _createClass(Img, [{\n    key: \"srcChanged\",\n    value: function srcChanged() {\n      this.addIO();\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.inheritedAttributes = inheritAttributes(this.el, ['draggable']);\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      this.addIO();\n    }\n  }, {\n    key: \"addIO\",\n    value: function addIO() {\n      var _this2 = this;\n\n      if (this.src === undefined) {\n        return;\n      }\n\n      if (typeof window !== 'undefined' && 'IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n        this.removeIO();\n        this.io = new IntersectionObserver(function (data) {\n          /**\n           * On slower devices, it is possible for an intersection observer entry to contain multiple\n           * objects in the array. This happens when quickly scrolling an image into view and then out of\n           * view. In this case, the last object represents the current state of the component.\n           */\n          if (data[data.length - 1].isIntersecting) {\n            _this2.load();\n\n            _this2.removeIO();\n          }\n        });\n        this.io.observe(this.el);\n      } else {\n        // fall back to setTimeout for Safari and IE\n        setTimeout(function () {\n          return _this2.load();\n        }, 200);\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      this.loadError = this.onError;\n      this.loadSrc = this.src;\n      this.ionImgWillLoad.emit();\n    }\n  }, {\n    key: \"removeIO\",\n    value: function removeIO() {\n      if (this.io) {\n        this.io.disconnect();\n        this.io = undefined;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loadSrc = this.loadSrc,\n          alt = this.alt,\n          onLoad = this.onLoad,\n          loadError = this.loadError,\n          inheritedAttributes = this.inheritedAttributes;\n      var draggable = inheritedAttributes.draggable;\n      return h(Host, {\n        class: getIonMode(this)\n      }, h(\"img\", {\n        decoding: \"async\",\n        src: loadSrc,\n        alt: alt,\n        onLoad: onLoad,\n        onError: loadError,\n        part: \"image\",\n        draggable: isDraggable(draggable)\n      }));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"src\": [\"srcChanged\"]\n      };\n    }\n  }]);\n\n  return Img;\n}();\n/**\n * Enumerated strings must be set as booleans\n * as Stencil will not render 'false' in the DOM.\n * The need to explicitly render draggable=\"true\"\n * as only certain elements are draggable by default.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable.\n */\n\n\nvar isDraggable = function isDraggable(draggable) {\n  switch (draggable) {\n    case 'true':\n      return true;\n\n    case 'false':\n      return false;\n\n    default:\n      return undefined;\n  }\n};\n\nImg.style = imgCss;\nexport { Img as ion_img };","map":null,"metadata":{},"sourceType":"module"}