{"ast":null,"code":"import _defineProperty from \"F:\\\\New folder (17)\\\\nd0067-c4-deployment-process-project-starter\\\\udagram\\\\udagram-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";\nimport _classCallCheck from \"F:\\\\New folder (17)\\\\nd0067-c4-deployment-process-project-starter\\\\udagram\\\\udagram-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"F:\\\\New folder (17)\\\\nd0067-c4-deployment-process-project-starter\\\\udagram\\\\udagram-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _asyncToGenerator from \"F:\\\\New folder (17)\\\\nd0067-c4-deployment-process-project-starter\\\\udagram\\\\udagram-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-b3eecb14.js';\nimport { b as getIonMode, a as isPlatform } from './ionic-global-f1ce4d2d.js';\nimport { C as CoreDelegate, a as attachComponent, d as detachComponent } from './framework-delegate-ce4f806c.js';\nimport { r as raf, g as getElementRoot, a as addEventListener } from './helpers-4d272360.js';\nimport { B as BACKDROP, e as prepareOverlay, d as _present, j as focusFirstDescendant, f as _dismiss, g as eventMethod } from './overlays-ff47fddd.js';\nimport { g as getClassMap } from './theme-7670341c.js';\nimport { e as deepReady } from './index-2b53f989.js';\nimport { c as createAnimation } from './animation-36c1d77d.js';\nimport './hardware-back-button-490df115.js';\n/**\n * Returns the dimensions of the popover\n * arrow on `ios` mode. If arrow is disabled\n * returns (0, 0).\n */\n\nvar getArrowDimensions = function getArrowDimensions(arrowEl) {\n  if (!arrowEl) {\n    return {\n      arrowWidth: 0,\n      arrowHeight: 0\n    };\n  }\n\n  var _arrowEl$getBoundingC = arrowEl.getBoundingClientRect(),\n      width = _arrowEl$getBoundingC.width,\n      height = _arrowEl$getBoundingC.height;\n\n  return {\n    arrowWidth: width,\n    arrowHeight: height\n  };\n};\n/**\n * Returns the recommended dimensions of the popover\n * that takes into account whether or not the width\n * should match the trigger width.\n */\n\n\nvar getPopoverDimensions = function getPopoverDimensions(size, contentEl, triggerEl) {\n  var contentDimentions = contentEl.getBoundingClientRect();\n  var contentHeight = contentDimentions.height;\n  var contentWidth = contentDimentions.width;\n\n  if (size === 'cover' && triggerEl) {\n    var triggerDimensions = triggerEl.getBoundingClientRect();\n    contentWidth = triggerDimensions.width;\n  }\n\n  return {\n    contentWidth: contentWidth,\n    contentHeight: contentHeight\n  };\n};\n\nvar configureDismissInteraction = function configureDismissInteraction(triggerEl, triggerAction, popoverEl, parentPopoverEl) {\n  var dismissCallbacks = [];\n  var root = getElementRoot(parentPopoverEl);\n  var parentContentEl = root.querySelector('.popover-content');\n\n  switch (triggerAction) {\n    case 'hover':\n      dismissCallbacks = [{\n        /**\n         * Do not use mouseover here\n         * as this will causes the event to\n         * be dispatched on each underlying\n         * element rather than on the popover\n         * content as a whole.\n         */\n        eventName: 'mouseenter',\n        callback: function callback(ev) {\n          /**\n           * Do not dismiss the popover is we\n           * are hovering over its trigger.\n           * This would be easier if we used mouseover\n           * but this would cause the event to be dispatched\n           * more often than we would like, potentially\n           * causing performance issues.\n           */\n          var element = document.elementFromPoint(ev.clientX, ev.clientY);\n\n          if (element === triggerEl) {\n            return;\n          }\n\n          popoverEl.dismiss(undefined, undefined, false);\n        }\n      }];\n      break;\n\n    case 'context-menu':\n    case 'click':\n    default:\n      dismissCallbacks = [{\n        eventName: 'click',\n        callback: function callback(ev) {\n          /**\n           * Do not dismiss the popover is we\n           * are hovering over its trigger.\n           */\n          var target = ev.target;\n          var closestTrigger = target.closest('[data-ion-popover-trigger]');\n\n          if (closestTrigger === triggerEl) {\n            /**\n             * stopPropagation here so if the\n             * popover has dismissOnSelect=\"true\"\n             * the popover does not dismiss since\n             * we just clicked a trigger element.\n             */\n            ev.stopPropagation();\n            return;\n          }\n\n          popoverEl.dismiss(undefined, undefined, false);\n        }\n      }];\n      break;\n  }\n\n  dismissCallbacks.forEach(function (_ref) {\n    var eventName = _ref.eventName,\n        callback = _ref.callback;\n    return parentContentEl.addEventListener(eventName, callback);\n  });\n  return function () {\n    dismissCallbacks.forEach(function (_ref2) {\n      var eventName = _ref2.eventName,\n          callback = _ref2.callback;\n      return parentContentEl.removeEventListener(eventName, callback);\n    });\n  };\n};\n/**\n * Configures the triggerEl to respond\n * to user interaction based upon the triggerAction\n * prop that devs have defined.\n */\n\n\nvar configureTriggerInteraction = function configureTriggerInteraction(triggerEl, triggerAction, popoverEl) {\n  var triggerCallbacks = [];\n  /**\n   * Based upon the kind of trigger interaction\n   * the user wants, we setup the correct event\n   * listeners.\n   */\n\n  switch (triggerAction) {\n    case 'hover':\n      var hoverTimeout;\n      triggerCallbacks = [{\n        eventName: 'mouseenter',\n        callback: function () {\n          var _callback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ev) {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    ev.stopPropagation();\n\n                    if (hoverTimeout) {\n                      clearTimeout(hoverTimeout);\n                    }\n                    /**\n                     * Hovering over a trigger should not\n                     * immediately open the next popover.\n                     */\n\n\n                    hoverTimeout = setTimeout(function () {\n                      raf(function () {\n                        popoverEl.presentFromTrigger(ev);\n                        hoverTimeout = undefined;\n                      });\n                    }, 100);\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function callback(_x) {\n            return _callback.apply(this, arguments);\n          }\n\n          return callback;\n        }()\n      }, {\n        eventName: 'mouseleave',\n        callback: function callback(ev) {\n          if (hoverTimeout) {\n            clearTimeout(hoverTimeout);\n          }\n          /**\n           * If mouse is over another popover\n           * that is not this popover then we should\n           * close this popover.\n           */\n\n\n          var target = ev.relatedTarget;\n\n          if (!target) {\n            return;\n          }\n\n          if (target.closest('ion-popover') !== popoverEl) {\n            popoverEl.dismiss(undefined, undefined, false);\n          }\n        }\n      }, {\n        /**\n         * stopPropagation here prevents the popover\n         * from dismissing when dismiss-on-select=\"true\".\n         */\n        eventName: 'click',\n        callback: function callback(ev) {\n          return ev.stopPropagation();\n        }\n      }, {\n        eventName: 'ionPopoverActivateTrigger',\n        callback: function callback(ev) {\n          return popoverEl.presentFromTrigger(ev, true);\n        }\n      }];\n      break;\n\n    case 'context-menu':\n      triggerCallbacks = [{\n        eventName: 'contextmenu',\n        callback: function callback(ev) {\n          /**\n           * Prevents the platform context\n           * menu from appearing.\n           */\n          ev.preventDefault();\n          popoverEl.presentFromTrigger(ev);\n        }\n      }, {\n        eventName: 'click',\n        callback: function callback(ev) {\n          return ev.stopPropagation();\n        }\n      }, {\n        eventName: 'ionPopoverActivateTrigger',\n        callback: function callback(ev) {\n          return popoverEl.presentFromTrigger(ev, true);\n        }\n      }];\n      break;\n\n    case 'click':\n    default:\n      triggerCallbacks = [{\n        /**\n         * Do not do a stopPropagation() here\n         * because if you had two click triggers\n         * then clicking the first trigger and then\n         * clicking the second trigger would not cause\n         * the first popover to dismiss.\n         */\n        eventName: 'click',\n        callback: function callback(ev) {\n          return popoverEl.presentFromTrigger(ev);\n        }\n      }, {\n        eventName: 'ionPopoverActivateTrigger',\n        callback: function callback(ev) {\n          return popoverEl.presentFromTrigger(ev, true);\n        }\n      }];\n      break;\n  }\n\n  triggerCallbacks.forEach(function (_ref3) {\n    var eventName = _ref3.eventName,\n        callback = _ref3.callback;\n    return triggerEl.addEventListener(eventName, callback);\n  });\n  triggerEl.setAttribute('data-ion-popover-trigger', 'true');\n  return function () {\n    triggerCallbacks.forEach(function (_ref4) {\n      var eventName = _ref4.eventName,\n          callback = _ref4.callback;\n      return triggerEl.removeEventListener(eventName, callback);\n    });\n    triggerEl.removeAttribute('data-ion-popover-trigger');\n  };\n};\n/**\n * Returns the index of an ion-item in an array of ion-items.\n */\n\n\nvar getIndexOfItem = function getIndexOfItem(items, item) {\n  if (!item || item.tagName !== 'ION-ITEM') {\n    return -1;\n  }\n\n  return items.findIndex(function (el) {\n    return el === item;\n  });\n};\n/**\n * Given an array of elements and a currently focused ion-item\n * returns the next ion-item relative to the focused one or\n * undefined.\n */\n\n\nvar getNextItem = function getNextItem(items, currentItem) {\n  var currentItemIndex = getIndexOfItem(items, currentItem);\n  return items[currentItemIndex + 1];\n};\n/**\n * Given an array of elements and a currently focused ion-item\n * returns the previous ion-item relative to the focused one or\n * undefined.\n */\n\n\nvar getPrevItem = function getPrevItem(items, currentItem) {\n  var currentItemIndex = getIndexOfItem(items, currentItem);\n  return items[currentItemIndex - 1];\n};\n/** Focus the internal button of the ion-item */\n\n\nvar focusItem = function focusItem(item) {\n  var root = getElementRoot(item);\n  var button = root.querySelector('button');\n\n  if (button) {\n    raf(function () {\n      return button.focus();\n    });\n  }\n};\n/**\n * Returns `true` if `el` has been designated\n * as a trigger element for an ion-popover.\n */\n\n\nvar isTriggerElement = function isTriggerElement(el) {\n  return el.hasAttribute('data-ion-popover-trigger');\n};\n\nvar configureKeyboardInteraction = function configureKeyboardInteraction(popoverEl) {\n  var callback = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(ev) {\n      var _a, activeElement, items, targetTagName, parentPopover, nextItem, prevItem, firstItem, lastItem, rightEvent;\n\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              activeElement = document.activeElement;\n              items = [];\n              targetTagName = (_a = ev.target) === null || _a === void 0 ? void 0 : _a.tagName;\n              /**\n               * Only handle custom keyboard interactions for the host popover element\n               * and children ion-item elements.\n               */\n\n              if (!(targetTagName !== 'ION-POPOVER' && targetTagName !== 'ION-ITEM')) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              /**\n               * Complex selectors with :not() are :not supported\n               * in older versions of Chromium so we need to do a\n               * try/catch here so errors are not thrown.\n               */\n              try {\n                /**\n                 * Select all ion-items that are not children of child popovers.\n                 * i.e. only select ion-item elements that are part of this popover\n                 */\n                items = Array.from(popoverEl.querySelectorAll('ion-item:not(ion-popover ion-popover *):not([disabled])'));\n                /* eslint-disable-next-line */\n              } catch (_b) {}\n\n              _context2.t0 = ev.key;\n              _context2.next = _context2.t0 === 'ArrowLeft' ? 9 : _context2.t0 === 'ArrowDown' ? 14 : _context2.t0 === 'ArrowUp' ? 18 : _context2.t0 === 'Home' ? 22 : _context2.t0 === 'End' ? 26 : _context2.t0 === 'ArrowRight' ? 30 : _context2.t0 === ' ' ? 30 : _context2.t0 === 'Enter' ? 30 : 32;\n              break;\n\n            case 9:\n              _context2.next = 11;\n              return popoverEl.getParentPopover();\n\n            case 11:\n              parentPopover = _context2.sent;\n\n              if (parentPopover) {\n                popoverEl.dismiss(undefined, undefined, false);\n              }\n\n              return _context2.abrupt(\"break\", 32);\n\n            case 14:\n              // Disable movement/scroll with keyboard\n              ev.preventDefault();\n              nextItem = getNextItem(items, activeElement);\n\n              if (nextItem !== undefined) {\n                focusItem(nextItem);\n              }\n\n              return _context2.abrupt(\"break\", 32);\n\n            case 18:\n              // Disable movement/scroll with keyboard\n              ev.preventDefault();\n              prevItem = getPrevItem(items, activeElement);\n\n              if (prevItem !== undefined) {\n                focusItem(prevItem);\n              }\n\n              return _context2.abrupt(\"break\", 32);\n\n            case 22:\n              ev.preventDefault();\n              firstItem = items[0];\n\n              if (firstItem !== undefined) {\n                focusItem(firstItem);\n              }\n\n              return _context2.abrupt(\"break\", 32);\n\n            case 26:\n              ev.preventDefault();\n              lastItem = items[items.length - 1];\n\n              if (lastItem !== undefined) {\n                focusItem(lastItem);\n              }\n\n              return _context2.abrupt(\"break\", 32);\n\n            case 30:\n              if (activeElement && isTriggerElement(activeElement)) {\n                rightEvent = new CustomEvent('ionPopoverActivateTrigger');\n                activeElement.dispatchEvent(rightEvent);\n              }\n\n              return _context2.abrupt(\"break\", 32);\n\n            case 32:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function callback(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  popoverEl.addEventListener('keydown', callback);\n  return function () {\n    return popoverEl.removeEventListener('keydown', callback);\n  };\n};\n/**\n * Positions a popover by taking into account\n * the reference point, preferred side, alignment\n * and viewport dimensions.\n */\n\n\nvar getPopoverPosition = function getPopoverPosition(isRTL, contentWidth, contentHeight, arrowWidth, arrowHeight, reference, side, align, defaultPosition, triggerEl, event) {\n  var _a;\n\n  var referenceCoordinates = {\n    top: 0,\n    left: 0,\n    width: 0,\n    height: 0\n  };\n  /**\n   * Calculate position relative to the\n   * x-y coordinates in the event that\n   * was passed in\n   */\n\n  switch (reference) {\n    case 'event':\n      if (!event) {\n        return defaultPosition;\n      }\n\n      var mouseEv = event;\n      referenceCoordinates = {\n        top: mouseEv.clientY,\n        left: mouseEv.clientX,\n        width: 1,\n        height: 1\n      };\n      break;\n\n    /**\n     * Calculate position relative to the bounding\n     * box on either the trigger element\n     * specified via the `trigger` prop or\n     * the target specified on the event\n     * that was passed in.\n     */\n\n    case 'trigger':\n    default:\n      var customEv = event;\n      /**\n       * ionShadowTarget is used when we need to align the\n       * popover with an element inside of the shadow root\n       * of an Ionic component. Ex: Presenting a popover\n       * by clicking on the collapsed indicator inside\n       * of `ion-breadcrumb` and centering it relative\n       * to the indicator rather than `ion-breadcrumb`\n       * as a whole.\n       */\n\n      var actualTriggerEl = triggerEl || ((_a = customEv === null || customEv === void 0 ? void 0 : customEv.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (customEv === null || customEv === void 0 ? void 0 : customEv.target);\n\n      if (!actualTriggerEl) {\n        return defaultPosition;\n      }\n\n      var triggerBoundingBox = actualTriggerEl.getBoundingClientRect();\n      referenceCoordinates = {\n        top: triggerBoundingBox.top,\n        left: triggerBoundingBox.left,\n        width: triggerBoundingBox.width,\n        height: triggerBoundingBox.height\n      };\n      break;\n  }\n  /**\n   * Get top/left offset that would allow\n   * popover to be positioned on the\n   * preferred side of the reference.\n   */\n\n\n  var coordinates = calculatePopoverSide(side, referenceCoordinates, contentWidth, contentHeight, arrowWidth, arrowHeight, isRTL);\n  /**\n   * Get the top/left adjustments that\n   * would allow the popover content\n   * to have the correct alignment.\n   */\n\n  var alignedCoordinates = calculatePopoverAlign(align, side, referenceCoordinates, contentWidth, contentHeight);\n  var top = coordinates.top + alignedCoordinates.top;\n  var left = coordinates.left + alignedCoordinates.left;\n\n  var _calculateArrowPositi = calculateArrowPosition(side, arrowWidth, arrowHeight, top, left, contentWidth, contentHeight, isRTL),\n      arrowTop = _calculateArrowPositi.arrowTop,\n      arrowLeft = _calculateArrowPositi.arrowLeft;\n\n  var _calculatePopoverOrig = calculatePopoverOrigin(side, align, isRTL),\n      originX = _calculatePopoverOrig.originX,\n      originY = _calculatePopoverOrig.originY;\n\n  return {\n    top: top,\n    left: left,\n    referenceCoordinates: referenceCoordinates,\n    arrowTop: arrowTop,\n    arrowLeft: arrowLeft,\n    originX: originX,\n    originY: originY\n  };\n};\n/**\n * Determines the transform-origin\n * of the popover animation so that it\n * is in line with what the side and alignment\n * prop values are. Currently only used\n * with the MD animation.\n */\n\n\nvar calculatePopoverOrigin = function calculatePopoverOrigin(side, align, isRTL) {\n  switch (side) {\n    case 'top':\n      return {\n        originX: getOriginXAlignment(align),\n        originY: 'bottom'\n      };\n\n    case 'bottom':\n      return {\n        originX: getOriginXAlignment(align),\n        originY: 'top'\n      };\n\n    case 'left':\n      return {\n        originX: 'right',\n        originY: getOriginYAlignment(align)\n      };\n\n    case 'right':\n      return {\n        originX: 'left',\n        originY: getOriginYAlignment(align)\n      };\n\n    case 'start':\n      return {\n        originX: isRTL ? 'left' : 'right',\n        originY: getOriginYAlignment(align)\n      };\n\n    case 'end':\n      return {\n        originX: isRTL ? 'right' : 'left',\n        originY: getOriginYAlignment(align)\n      };\n  }\n};\n\nvar getOriginXAlignment = function getOriginXAlignment(align) {\n  switch (align) {\n    case 'start':\n      return 'left';\n\n    case 'center':\n      return 'center';\n\n    case 'end':\n      return 'right';\n  }\n};\n\nvar getOriginYAlignment = function getOriginYAlignment(align) {\n  switch (align) {\n    case 'start':\n      return 'top';\n\n    case 'center':\n      return 'center';\n\n    case 'end':\n      return 'bottom';\n  }\n};\n/**\n * Calculates where the arrow positioning\n * should be relative to the popover content.\n */\n\n\nvar calculateArrowPosition = function calculateArrowPosition(side, arrowWidth, arrowHeight, top, left, contentWidth, contentHeight, isRTL) {\n  /**\n   * Note: When side is left, right, start, or end, the arrow is\n   * been rotated using a `transform`, so to move the arrow up or down\n   * by its dimension, you need to use `arrowWidth`.\n   */\n  var leftPosition = {\n    arrowTop: top + contentHeight / 2 - arrowWidth / 2,\n    arrowLeft: left + contentWidth - arrowWidth / 2\n  };\n  /**\n   * Move the arrow to the left by arrowWidth and then\n   * again by half of its width because we have rotated\n   * the arrow using a transform.\n   */\n\n  var rightPosition = {\n    arrowTop: top + contentHeight / 2 - arrowWidth / 2,\n    arrowLeft: left - arrowWidth * 1.5\n  };\n\n  switch (side) {\n    case 'top':\n      return {\n        arrowTop: top + contentHeight,\n        arrowLeft: left + contentWidth / 2 - arrowWidth / 2\n      };\n\n    case 'bottom':\n      return {\n        arrowTop: top - arrowHeight,\n        arrowLeft: left + contentWidth / 2 - arrowWidth / 2\n      };\n\n    case 'left':\n      return leftPosition;\n\n    case 'right':\n      return rightPosition;\n\n    case 'start':\n      return isRTL ? rightPosition : leftPosition;\n\n    case 'end':\n      return isRTL ? leftPosition : rightPosition;\n\n    default:\n      return {\n        arrowTop: 0,\n        arrowLeft: 0\n      };\n  }\n};\n/**\n * Calculates the required top/left\n * values needed to position the popover\n * content on the side specified in the\n * `side` prop.\n */\n\n\nvar calculatePopoverSide = function calculatePopoverSide(side, triggerBoundingBox, contentWidth, contentHeight, arrowWidth, arrowHeight, isRTL) {\n  var sideLeft = {\n    top: triggerBoundingBox.top,\n    left: triggerBoundingBox.left - contentWidth - arrowWidth\n  };\n  var sideRight = {\n    top: triggerBoundingBox.top,\n    left: triggerBoundingBox.left + triggerBoundingBox.width + arrowWidth\n  };\n\n  switch (side) {\n    case 'top':\n      return {\n        top: triggerBoundingBox.top - contentHeight - arrowHeight,\n        left: triggerBoundingBox.left\n      };\n\n    case 'right':\n      return sideRight;\n\n    case 'bottom':\n      return {\n        top: triggerBoundingBox.top + triggerBoundingBox.height + arrowHeight,\n        left: triggerBoundingBox.left\n      };\n\n    case 'left':\n      return sideLeft;\n\n    case 'start':\n      return isRTL ? sideRight : sideLeft;\n\n    case 'end':\n      return isRTL ? sideLeft : sideRight;\n  }\n};\n/**\n * Calculates the required top/left\n * offset values needed to provide the\n * correct alignment regardless while taking\n * into account the side the popover is on.\n */\n\n\nvar calculatePopoverAlign = function calculatePopoverAlign(align, side, triggerBoundingBox, contentWidth, contentHeight) {\n  switch (align) {\n    case 'center':\n      return calculatePopoverCenterAlign(side, triggerBoundingBox, contentWidth, contentHeight);\n\n    case 'end':\n      return calculatePopoverEndAlign(side, triggerBoundingBox, contentWidth, contentHeight);\n\n    case 'start':\n    default:\n      return {\n        top: 0,\n        left: 0\n      };\n  }\n};\n/**\n * Calculate the end alignment for\n * the popover. If side is on the x-axis\n * then the align values refer to the top\n * and bottom margins of the content.\n * If side is on the y-axis then the\n * align values refer to the left and right\n * margins of the content.\n */\n\n\nvar calculatePopoverEndAlign = function calculatePopoverEndAlign(side, triggerBoundingBox, contentWidth, contentHeight) {\n  switch (side) {\n    case 'start':\n    case 'end':\n    case 'left':\n    case 'right':\n      return {\n        top: -(contentHeight - triggerBoundingBox.height),\n        left: 0\n      };\n\n    case 'top':\n    case 'bottom':\n    default:\n      return {\n        top: 0,\n        left: -(contentWidth - triggerBoundingBox.width)\n      };\n  }\n};\n/**\n * Calculate the center alignment for\n * the popover. If side is on the x-axis\n * then the align values refer to the top\n * and bottom margins of the content.\n * If side is on the y-axis then the\n * align values refer to the left and right\n * margins of the content.\n */\n\n\nvar calculatePopoverCenterAlign = function calculatePopoverCenterAlign(side, triggerBoundingBox, contentWidth, contentHeight) {\n  switch (side) {\n    case 'start':\n    case 'end':\n    case 'left':\n    case 'right':\n      return {\n        top: -(contentHeight / 2 - triggerBoundingBox.height / 2),\n        left: 0\n      };\n\n    case 'top':\n    case 'bottom':\n    default:\n      return {\n        top: 0,\n        left: -(contentWidth / 2 - triggerBoundingBox.width / 2)\n      };\n  }\n};\n/**\n * Adjusts popover positioning coordinates\n * such that popover does not appear offscreen\n * or overlapping safe area bounds.\n */\n\n\nvar calculateWindowAdjustment = function calculateWindowAdjustment(side, coordTop, coordLeft, bodyPadding, bodyWidth, bodyHeight, contentWidth, contentHeight, safeAreaMargin, contentOriginX, contentOriginY, triggerCoordinates) {\n  var coordArrowTop = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : 0;\n  var coordArrowLeft = arguments.length > 13 && arguments[13] !== undefined ? arguments[13] : 0;\n  var arrowHeight = arguments.length > 14 && arguments[14] !== undefined ? arguments[14] : 0;\n  var arrowTop = coordArrowTop;\n  var arrowLeft = coordArrowLeft;\n  var left = coordLeft;\n  var top = coordTop;\n  var bottom;\n  var originX = contentOriginX;\n  var originY = contentOriginY;\n  var checkSafeAreaLeft = false;\n  var checkSafeAreaRight = false;\n  var triggerTop = triggerCoordinates ? triggerCoordinates.top + triggerCoordinates.height : bodyHeight / 2 - contentHeight / 2;\n  var triggerHeight = triggerCoordinates ? triggerCoordinates.height : 0;\n  var addPopoverBottomClass = false;\n  /**\n   * Adjust popover so it does not\n   * go off the left of the screen.\n   */\n\n  if (left < bodyPadding + safeAreaMargin) {\n    left = bodyPadding;\n    checkSafeAreaLeft = true;\n    originX = 'left';\n    /**\n     * Adjust popover so it does not\n     * go off the right of the screen.\n     */\n  } else if (contentWidth + bodyPadding + left + safeAreaMargin > bodyWidth) {\n    checkSafeAreaRight = true;\n    left = bodyWidth - contentWidth - bodyPadding;\n    originX = 'right';\n  }\n  /**\n   * Adjust popover so it does not\n   * go off the top of the screen.\n   * If popover is on the left or the right of\n   * the trigger, then we should not adjust top\n   * margins.\n   */\n\n\n  if (triggerTop + triggerHeight + contentHeight > bodyHeight && (side === 'top' || side === 'bottom')) {\n    if (triggerTop - contentHeight > 0) {\n      top = triggerTop - contentHeight - triggerHeight - (arrowHeight - 1);\n      arrowTop = top + contentHeight;\n      originY = 'bottom';\n      addPopoverBottomClass = true;\n      /**\n       * If not enough room for popover to appear\n       * above trigger, then cut it off.\n       */\n    } else {\n      bottom = bodyPadding;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    originX: originX,\n    originY: originY,\n    checkSafeAreaLeft: checkSafeAreaLeft,\n    checkSafeAreaRight: checkSafeAreaRight,\n    arrowTop: arrowTop,\n    arrowLeft: arrowLeft,\n    addPopoverBottomClass: addPopoverBottomClass\n  };\n};\n\nvar shouldShowArrow = function shouldShowArrow(side) {\n  var didAdjustBounds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var ev = arguments.length > 2 ? arguments[2] : undefined;\n  var trigger = arguments.length > 3 ? arguments[3] : undefined;\n\n  /**\n   * If no event provided and\n   * we do not have a trigger,\n   * then this popover was likely\n   * presented via the popoverController\n   * or users called `present` manually.\n   * In this case, the arrow should not be\n   * shown as we do not have a reference.\n   */\n  if (!ev && !trigger) {\n    return false;\n  }\n  /**\n   * If popover is on the left or the right\n   * of a trigger, but we needed to adjust the\n   * popover due to screen bounds, then we should\n   * hide the arrow as it will never be pointing\n   * at the trigger.\n   */\n\n\n  if (side !== 'top' && side !== 'bottom' && didAdjustBounds) {\n    return false;\n  }\n\n  return true;\n};\n\nvar POPOVER_IOS_BODY_PADDING = 5;\n/**\n * iOS Popover Enter Animation\n */\n\nvar iosEnterAnimation = function iosEnterAnimation(baseEl, opts) {\n  var _a;\n\n  var ev = opts.event,\n      size = opts.size,\n      trigger = opts.trigger,\n      reference = opts.reference,\n      side = opts.side,\n      align = opts.align;\n  var doc = baseEl.ownerDocument;\n  var isRTL = doc.dir === 'rtl';\n  var bodyWidth = doc.defaultView.innerWidth;\n  var bodyHeight = doc.defaultView.innerHeight;\n  var root = getElementRoot(baseEl);\n  var contentEl = root.querySelector('.popover-content');\n  var arrowEl = root.querySelector('.popover-arrow');\n  var referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);\n\n  var _getPopoverDimensions = getPopoverDimensions(size, contentEl, referenceSizeEl),\n      contentWidth = _getPopoverDimensions.contentWidth,\n      contentHeight = _getPopoverDimensions.contentHeight;\n\n  var _getArrowDimensions = getArrowDimensions(arrowEl),\n      arrowWidth = _getArrowDimensions.arrowWidth,\n      arrowHeight = _getArrowDimensions.arrowHeight;\n\n  var defaultPosition = {\n    top: bodyHeight / 2 - contentHeight / 2,\n    left: bodyWidth / 2 - contentWidth / 2,\n    originX: isRTL ? 'right' : 'left',\n    originY: 'top'\n  };\n  var results = getPopoverPosition(isRTL, contentWidth, contentHeight, arrowWidth, arrowHeight, reference, side, align, defaultPosition, trigger, ev);\n  var padding = size === 'cover' ? 0 : POPOVER_IOS_BODY_PADDING;\n  var margin = size === 'cover' ? 0 : 25;\n\n  var _calculateWindowAdjus = calculateWindowAdjustment(side, results.top, results.left, padding, bodyWidth, bodyHeight, contentWidth, contentHeight, margin, results.originX, results.originY, results.referenceCoordinates, results.arrowTop, results.arrowLeft, arrowHeight),\n      originX = _calculateWindowAdjus.originX,\n      originY = _calculateWindowAdjus.originY,\n      top = _calculateWindowAdjus.top,\n      left = _calculateWindowAdjus.left,\n      bottom = _calculateWindowAdjus.bottom,\n      checkSafeAreaLeft = _calculateWindowAdjus.checkSafeAreaLeft,\n      checkSafeAreaRight = _calculateWindowAdjus.checkSafeAreaRight,\n      arrowTop = _calculateWindowAdjus.arrowTop,\n      arrowLeft = _calculateWindowAdjus.arrowLeft,\n      addPopoverBottomClass = _calculateWindowAdjus.addPopoverBottomClass;\n\n  var baseAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n  var wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  wrapperAnimation.addElement(root.querySelector('.popover-wrapper')).fromTo('opacity', 0.01, 1);\n  return baseAnimation.easing('ease').duration(100).beforeAddWrite(function () {\n    if (size === 'cover') {\n      baseEl.style.setProperty('--width', \"\".concat(contentWidth, \"px\"));\n    }\n\n    if (addPopoverBottomClass) {\n      baseEl.classList.add('popover-bottom');\n    }\n\n    if (bottom !== undefined) {\n      contentEl.style.setProperty('bottom', \"\".concat(bottom, \"px\"));\n    }\n\n    var safeAreaLeft = ' + var(--ion-safe-area-left, 0)';\n    var safeAreaRight = ' - var(--ion-safe-area-right, 0)';\n    var leftValue = \"\".concat(left, \"px\");\n\n    if (checkSafeAreaLeft) {\n      leftValue = \"\".concat(left, \"px\").concat(safeAreaLeft);\n    }\n\n    if (checkSafeAreaRight) {\n      leftValue = \"\".concat(left, \"px\").concat(safeAreaRight);\n    }\n\n    contentEl.style.setProperty('top', \"calc(\".concat(top, \"px + var(--offset-y, 0))\"));\n    contentEl.style.setProperty('left', \"calc(\".concat(leftValue, \" + var(--offset-x, 0))\"));\n    contentEl.style.setProperty('transform-origin', \"\".concat(originY, \" \").concat(originX));\n\n    if (arrowEl !== null) {\n      var didAdjustBounds = results.top !== top || results.left !== left;\n      var showArrow = shouldShowArrow(side, didAdjustBounds, ev, trigger);\n\n      if (showArrow) {\n        arrowEl.style.setProperty('top', \"calc(\".concat(arrowTop, \"px + var(--offset-y, 0))\"));\n        arrowEl.style.setProperty('left', \"calc(\".concat(arrowLeft, \"px + var(--offset-x, 0))\"));\n      } else {\n        arrowEl.style.setProperty('display', 'none');\n      }\n    }\n  }).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n/**\n * iOS Popover Leave Animation\n */\n\n\nvar iosLeaveAnimation = function iosLeaveAnimation(baseEl) {\n  var root = getElementRoot(baseEl);\n  var contentEl = root.querySelector('.popover-content');\n  var arrowEl = root.querySelector('.popover-arrow');\n  var baseAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n  var wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  wrapperAnimation.addElement(root.querySelector('.popover-wrapper')).fromTo('opacity', 0.99, 0);\n  return baseAnimation.easing('ease').afterAddWrite(function () {\n    baseEl.style.removeProperty('--width');\n    baseEl.classList.remove('popover-bottom');\n    contentEl.style.removeProperty('top');\n    contentEl.style.removeProperty('left');\n    contentEl.style.removeProperty('bottom');\n    contentEl.style.removeProperty('transform-origin');\n\n    if (arrowEl) {\n      arrowEl.style.removeProperty('top');\n      arrowEl.style.removeProperty('left');\n      arrowEl.style.removeProperty('display');\n    }\n  }).duration(300).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nvar POPOVER_MD_BODY_PADDING = 12;\n/**\n * Md Popover Enter Animation\n */\n\nvar mdEnterAnimation = function mdEnterAnimation(baseEl, opts) {\n  var _a;\n\n  var ev = opts.event,\n      size = opts.size,\n      trigger = opts.trigger,\n      reference = opts.reference,\n      side = opts.side,\n      align = opts.align;\n  var doc = baseEl.ownerDocument;\n  var isRTL = doc.dir === 'rtl';\n  var bodyWidth = doc.defaultView.innerWidth;\n  var bodyHeight = doc.defaultView.innerHeight;\n  var root = getElementRoot(baseEl);\n  var contentEl = root.querySelector('.popover-content');\n  var referenceSizeEl = trigger || ((_a = ev === null || ev === void 0 ? void 0 : ev.detail) === null || _a === void 0 ? void 0 : _a.ionShadowTarget) || (ev === null || ev === void 0 ? void 0 : ev.target);\n\n  var _getPopoverDimensions2 = getPopoverDimensions(size, contentEl, referenceSizeEl),\n      contentWidth = _getPopoverDimensions2.contentWidth,\n      contentHeight = _getPopoverDimensions2.contentHeight;\n\n  var defaultPosition = {\n    top: bodyHeight / 2 - contentHeight / 2,\n    left: bodyWidth / 2 - contentWidth / 2,\n    originX: isRTL ? 'right' : 'left',\n    originY: 'top'\n  };\n  var results = getPopoverPosition(isRTL, contentWidth, contentHeight, 0, 0, reference, side, align, defaultPosition, trigger, ev);\n  var padding = size === 'cover' ? 0 : POPOVER_MD_BODY_PADDING;\n\n  var _calculateWindowAdjus2 = calculateWindowAdjustment(side, results.top, results.left, padding, bodyWidth, bodyHeight, contentWidth, contentHeight, 0, results.originX, results.originY, results.referenceCoordinates),\n      originX = _calculateWindowAdjus2.originX,\n      originY = _calculateWindowAdjus2.originY,\n      top = _calculateWindowAdjus2.top,\n      left = _calculateWindowAdjus2.left,\n      bottom = _calculateWindowAdjus2.bottom;\n\n  var baseAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n  var wrapperAnimation = createAnimation();\n  var contentAnimation = createAnimation();\n  var viewportAnimation = createAnimation();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({\n    'pointer-events': 'none'\n  }).afterClearStyles(['pointer-events']);\n  wrapperAnimation.addElement(root.querySelector('.popover-wrapper')).duration(150).fromTo('opacity', 0.01, 1);\n  contentAnimation.addElement(contentEl).beforeStyles({\n    top: \"calc(\".concat(top, \"px + var(--offset-y, 0px))\"),\n    left: \"calc(\".concat(left, \"px + var(--offset-x, 0px))\"),\n    'transform-origin': \"\".concat(originY, \" \").concat(originX)\n  }).beforeAddWrite(function () {\n    if (bottom !== undefined) {\n      contentEl.style.setProperty('bottom', \"\".concat(bottom, \"px\"));\n    }\n  }).fromTo('transform', 'scale(0.8)', 'scale(1)');\n  viewportAnimation.addElement(root.querySelector('.popover-viewport')).fromTo('opacity', 0.01, 1);\n  return baseAnimation.easing('cubic-bezier(0.36,0.66,0.04,1)').duration(300).beforeAddWrite(function () {\n    if (size === 'cover') {\n      baseEl.style.setProperty('--width', \"\".concat(contentWidth, \"px\"));\n    }\n\n    if (originY === 'bottom') {\n      baseEl.classList.add('popover-bottom');\n    }\n  }).addAnimation([backdropAnimation, wrapperAnimation, contentAnimation, viewportAnimation]);\n};\n/**\n * Md Popover Leave Animation\n */\n\n\nvar mdLeaveAnimation = function mdLeaveAnimation(baseEl) {\n  var root = getElementRoot(baseEl);\n  var contentEl = root.querySelector('.popover-content');\n  var baseAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n  var wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(root.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n  wrapperAnimation.addElement(root.querySelector('.popover-wrapper')).fromTo('opacity', 0.99, 0);\n  return baseAnimation.easing('ease').afterAddWrite(function () {\n    baseEl.style.removeProperty('--width');\n    baseEl.classList.remove('popover-bottom');\n    contentEl.style.removeProperty('top');\n    contentEl.style.removeProperty('left');\n    contentEl.style.removeProperty('bottom');\n    contentEl.style.removeProperty('transform-origin');\n  }).duration(150).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nvar popoverIosCss = \":host{--background:var(--ion-background-color, #fff);--min-width:0;--min-height:0;--max-width:auto;--height:auto;--offset-x:0px;--offset-y:0px;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:fixed;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);z-index:1001}:host(.popover-nested){pointer-events:none}:host(.popover-nested) .popover-wrapper{pointer-events:auto}:host(.overlay-hidden){display:none}.popover-wrapper{opacity:0;z-index:10}.popover-content{display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:auto;z-index:10}.popover-viewport{--ion-safe-area-top:0px;--ion-safe-area-right:0px;--ion-safe-area-bottom:0px;--ion-safe-area-left:0px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}:host(.popover-nested.popover-side-left){--offset-x:5px}:host(.popover-nested.popover-side-right){--offset-x:-5px}:host(.popover-nested.popover-side-start){--offset-x:5px}:host-context([dir=rtl]):host(.popover-nested.popover-side-start),:host-context([dir=rtl]).popover-nested.popover-side-start{--offset-x:-5px}:host(.popover-nested.popover-side-end){--offset-x:-5px}:host-context([dir=rtl]):host(.popover-nested.popover-side-end),:host-context([dir=rtl]).popover-nested.popover-side-end{--offset-x:5px}:host{--width:200px;--max-height:90%;--box-shadow:none;--backdrop-opacity:var(--ion-backdrop-opacity, 0.08)}:host(.popover-desktop){--box-shadow:0px 4px 16px 0px rgba(0, 0, 0, 0.12)}.popover-content{border-radius:10px}:host(.popover-desktop) .popover-content{border:0.5px solid var(--ion-color-step-100, #e6e6e6)}.popover-arrow{display:block;position:absolute;width:20px;height:10px;overflow:hidden}.popover-arrow::after{left:3px;top:3px;border-radius:3px;position:absolute;width:14px;height:14px;-webkit-transform:rotate(45deg);transform:rotate(45deg);background:var(--background);content:\\\"\\\";z-index:10}[dir=rtl] .popover-arrow::after,:host-context([dir=rtl]) .popover-arrow::after{left:unset;right:unset;right:3px}:host(.popover-bottom) .popover-arrow{top:auto;bottom:-10px}:host(.popover-bottom) .popover-arrow::after{top:-6px}:host(.popover-side-left) .popover-arrow{-webkit-transform:rotate(90deg);transform:rotate(90deg)}:host(.popover-side-right) .popover-arrow{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}:host(.popover-side-top) .popover-arrow{-webkit-transform:rotate(180deg);transform:rotate(180deg)}:host(.popover-side-start) .popover-arrow{-webkit-transform:rotate(90deg);transform:rotate(90deg)}:host-context([dir=rtl]):host(.popover-side-start) .popover-arrow,:host-context([dir=rtl]).popover-side-start .popover-arrow{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}:host(.popover-side-end) .popover-arrow{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}:host-context([dir=rtl]):host(.popover-side-end) .popover-arrow,:host-context([dir=rtl]).popover-side-end .popover-arrow{-webkit-transform:rotate(90deg);transform:rotate(90deg)}@supports ((-webkit-backdrop-filter: blur(0)) or (backdrop-filter: blur(0))){:host(.popover-translucent) .popover-content,:host(.popover-translucent) .popover-arrow::after{background:rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8);-webkit-backdrop-filter:saturate(180%) blur(20px);backdrop-filter:saturate(180%) blur(20px)}}\";\nvar popoverMdCss = \":host{--background:var(--ion-background-color, #fff);--min-width:0;--min-height:0;--max-width:auto;--height:auto;--offset-x:0px;--offset-y:0px;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:fixed;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);z-index:1001}:host(.popover-nested){pointer-events:none}:host(.popover-nested) .popover-wrapper{pointer-events:auto}:host(.overlay-hidden){display:none}.popover-wrapper{opacity:0;z-index:10}.popover-content{display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:auto;z-index:10}.popover-viewport{--ion-safe-area-top:0px;--ion-safe-area-right:0px;--ion-safe-area-bottom:0px;--ion-safe-area-left:0px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}:host(.popover-nested.popover-side-left){--offset-x:5px}:host(.popover-nested.popover-side-right){--offset-x:-5px}:host(.popover-nested.popover-side-start){--offset-x:5px}:host-context([dir=rtl]):host(.popover-nested.popover-side-start),:host-context([dir=rtl]).popover-nested.popover-side-start{--offset-x:-5px}:host(.popover-nested.popover-side-end){--offset-x:-5px}:host-context([dir=rtl]):host(.popover-nested.popover-side-end),:host-context([dir=rtl]).popover-nested.popover-side-end{--offset-x:5px}:host{--width:250px;--max-height:90%;--box-shadow:0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}.popover-content{border-radius:4px;-webkit-transform-origin:left top;transform-origin:left top}[dir=rtl] .popover-content,:host-context([dir=rtl]) .popover-content{-webkit-transform-origin:right top;transform-origin:right top}.popover-viewport{-webkit-transition-delay:100ms;transition-delay:100ms}\";\n\nvar Popover = /*#__PURE__*/function () {\n  function Popover(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Popover);\n\n    registerInstance(this, hostRef);\n    this.didPresent = createEvent(this, \"ionPopoverDidPresent\", 7);\n    this.willPresent = createEvent(this, \"ionPopoverWillPresent\", 7);\n    this.willDismiss = createEvent(this, \"ionPopoverWillDismiss\", 7);\n    this.didDismiss = createEvent(this, \"ionPopoverDidDismiss\", 7);\n    this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n    this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n    this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n    this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n    this.parentPopover = null;\n    this.popoverIndex = popoverIds++;\n    this.coreDelegate = CoreDelegate();\n    this.inline = false;\n    this.focusDescendantOnPresent = false;\n    this.presented = false;\n    /** @internal */\n\n    this.hasController = false;\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n\n    this.keyboardClose = true;\n    /**\n     * If `true`, the popover will be dismissed when the backdrop is clicked.\n     */\n\n    this.backdropDismiss = true;\n    /**\n     * If `true`, a backdrop will be displayed behind the popover.\n     */\n\n    this.showBackdrop = true;\n    /**\n     * If `true`, the popover will be translucent.\n     * Only applies when the mode is `\"ios\"` and the device supports\n     * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n     */\n\n    this.translucent = false;\n    /**\n     * If `true`, the popover will animate.\n     */\n\n    this.animated = true;\n    /**\n     * Describes what kind of interaction with the trigger that\n     * should cause the popover to open. Does not apply when the `trigger`\n     * property is `undefined`.\n     * If `'click'`, the popover will be presented when the trigger is left clicked.\n     * If `'hover'`, the popover will be presented when a pointer hovers over the trigger.\n     * If `'context-menu'`, the popover will be presented when the trigger is right\n     * clicked on desktop and long pressed on mobile. This will also prevent your\n     * device's normal context menu from appearing.\n     */\n\n    this.triggerAction = 'click';\n    /**\n     * Describes how to calculate the popover width.\n     * If `'cover'`, the popover width will match the width of the trigger.\n     * If `'auto'`, the popover width will be determined by the content in\n     * the popover.\n     */\n\n    this.size = 'auto';\n    /**\n     * If `true`, the popover will be automatically\n     * dismissed when the content has been clicked.\n     */\n\n    this.dismissOnSelect = false;\n    /**\n     * Describes what to position the popover relative to.\n     * If `'trigger'`, the popover will be positioned relative\n     * to the trigger button. If passing in an event, this is\n     * determined via event.target.\n     * If `'event'`, the popover will be positioned relative\n     * to the x/y coordinates of the trigger action. If passing\n     * in an event, this is determined via event.clientX and event.clientY.\n     */\n\n    this.reference = 'trigger';\n    /**\n     * Describes which side of the `reference` point to position\n     * the popover on. The `'start'` and `'end'` values are RTL-aware,\n     * and the `'left'` and `'right'` values are not.\n     */\n\n    this.side = 'bottom';\n    /**\n     * If `true`, the popover will display an arrow that points at the\n     * `reference` when running in `ios` mode. Does not apply in `md` mode.\n     */\n\n    this.arrow = true;\n    /**\n     * If `true`, the popover will open. If `false`, the popover will close.\n     * Use this if you need finer grained control over presentation, otherwise\n     * just use the popoverController or the `trigger` property.\n     * Note: `isOpen` will not automatically be set back to `false` when\n     * the popover dismisses. You will need to do that in your code.\n     */\n\n    this.isOpen = false;\n    /**\n     * @internal\n     *\n     * If `true` the popover will not register its own keyboard event handlers.\n     * This allows the contents of the popover to handle their own keyboard interactions.\n     *\n     * If `false`, the popover will register its own keyboard event handlers for\n     * navigating `ion-list` items within a popover (up/down/home/end/etc.).\n     * This will also cancel browser keyboard event bindings to prevent scroll\n     * behavior in a popover using a list of items.\n     */\n\n    this.keyboardEvents = false;\n\n    this.onBackdropTap = function () {\n      _this.dismiss(undefined, BACKDROP);\n    };\n\n    this.onLifecycle = function (modalEvent) {\n      var el = _this.usersElement;\n      var name = LIFECYCLE_MAP[modalEvent.type];\n\n      if (el && name) {\n        var event = new CustomEvent(name, {\n          bubbles: false,\n          cancelable: false,\n          detail: modalEvent.detail\n        });\n        el.dispatchEvent(event);\n      }\n    };\n\n    this.configureTriggerInteraction = function () {\n      var trigger = _this.trigger,\n          triggerAction = _this.triggerAction,\n          el = _this.el,\n          destroyTriggerInteraction = _this.destroyTriggerInteraction;\n\n      if (destroyTriggerInteraction) {\n        destroyTriggerInteraction();\n      }\n\n      var triggerEl = _this.triggerEl = trigger !== undefined ? document.getElementById(trigger) : null;\n\n      if (!triggerEl) {\n        return;\n      }\n\n      _this.destroyTriggerInteraction = configureTriggerInteraction(triggerEl, triggerAction, el);\n    };\n\n    this.configureKeyboardInteraction = function () {\n      var destroyKeyboardInteraction = _this.destroyKeyboardInteraction,\n          el = _this.el;\n\n      if (destroyKeyboardInteraction) {\n        destroyKeyboardInteraction();\n      }\n\n      _this.destroyKeyboardInteraction = configureKeyboardInteraction(el);\n    };\n\n    this.configureDismissInteraction = function () {\n      var destroyDismissInteraction = _this.destroyDismissInteraction,\n          parentPopover = _this.parentPopover,\n          triggerAction = _this.triggerAction,\n          triggerEl = _this.triggerEl,\n          el = _this.el;\n\n      if (!parentPopover || !triggerEl) {\n        return;\n      }\n\n      if (destroyDismissInteraction) {\n        destroyDismissInteraction();\n      }\n\n      _this.destroyDismissInteraction = configureDismissInteraction(triggerEl, triggerAction, el, parentPopover);\n    };\n  }\n\n  _createClass(Popover, [{\n    key: \"onTriggerChange\",\n    value: function onTriggerChange() {\n      this.configureTriggerInteraction();\n    }\n  }, {\n    key: \"onIsOpenChange\",\n    value: function onIsOpenChange(newValue, oldValue) {\n      if (newValue === true && oldValue === false) {\n        this.present();\n      } else if (newValue === false && oldValue === true) {\n        this.dismiss();\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      prepareOverlay(this.el);\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      /**\n       * If user has custom ID set then we should\n       * not assign the default incrementing ID.\n       */\n      this.popoverId = this.el.hasAttribute('id') ? this.el.getAttribute('id') : \"ion-popover-\".concat(this.popoverIndex);\n      this.parentPopover = this.el.closest(\"ion-popover:not(#\".concat(this.popoverId, \")\"));\n\n      if (this.alignment === undefined) {\n        this.alignment = getIonMode(this) === 'ios' ? 'center' : 'start';\n      }\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      var _this2 = this;\n\n      var parentPopover = this.parentPopover,\n          isOpen = this.isOpen;\n      /**\n       * If popover was rendered with isOpen=\"true\"\n       * then we should open popover immediately.\n       */\n\n      if (isOpen === true) {\n        raf(function () {\n          return _this2.present();\n        });\n      }\n\n      if (parentPopover) {\n        addEventListener(parentPopover, 'ionPopoverWillDismiss', function () {\n          _this2.dismiss(undefined, undefined, false);\n        });\n      }\n\n      this.configureTriggerInteraction();\n    }\n    /**\n     * When opening a popover from a trigger, we should not be\n     * modifying the `event` prop from inside the component.\n     * Additionally, when pressing the \"Right\" arrow key, we need\n     * to shift focus to the first descendant in the newly presented\n     * popover.\n     *\n     * @internal\n     */\n\n  }, {\n    key: \"presentFromTrigger\",\n    value: function () {\n      var _presentFromTrigger = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(event) {\n        var focusDescendant,\n            _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                focusDescendant = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : false;\n                this.focusDescendantOnPresent = focusDescendant;\n                _context3.next = 4;\n                return this.present(event);\n\n              case 4:\n                this.focusDescendantOnPresent = false;\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function presentFromTrigger(_x3) {\n        return _presentFromTrigger.apply(this, arguments);\n      }\n\n      return presentFromTrigger;\n    }()\n    /**\n     * Determines whether or not an overlay\n     * is being used inline or via a controller/JS\n     * and returns the correct delegate.\n     * By default, subsequent calls to getDelegate\n     * will use a cached version of the delegate.\n     * This is useful for calling dismiss after\n     * present so that the correct delegate is given.\n     */\n\n  }, {\n    key: \"getDelegate\",\n    value: function getDelegate() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.workingDelegate && !force) {\n        return {\n          delegate: this.workingDelegate,\n          inline: this.inline\n        };\n      }\n      /**\n       * If using overlay inline\n       * we potentially need to use the coreDelegate\n       * so that this works in vanilla JS apps.\n       * If a developer has presented this component\n       * via a controller, then we can assume\n       * the component is already in the\n       * correct place.\n       */\n\n\n      var parentEl = this.el.parentNode;\n      var inline = this.inline = parentEl !== null && !this.hasController;\n      var delegate = this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate;\n      return {\n        inline: inline,\n        delegate: delegate\n      };\n    }\n    /**\n     * Present the popover overlay after it has been created.\n     * Developers can pass a mouse, touch, or pointer event\n     * to position the popover relative to where that event\n     * was dispatched.\n     */\n\n  }, {\n    key: \"present\",\n    value: function () {\n      var _present2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(event) {\n        var data, _this$getDelegate, inline, delegate;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.presented) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                if (!(this.currentTransition !== undefined)) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.next = 5;\n                return this.currentTransition;\n\n              case 5:\n                data = Object.assign(Object.assign({}, this.componentProps), {\n                  popover: this.el\n                });\n                _this$getDelegate = this.getDelegate(true), inline = _this$getDelegate.inline, delegate = _this$getDelegate.delegate;\n                _context4.next = 9;\n                return attachComponent(delegate, this.el, this.component, ['popover-viewport'], data, inline);\n\n              case 9:\n                this.usersElement = _context4.sent;\n                _context4.next = 12;\n                return deepReady(this.usersElement);\n\n              case 12:\n                if (!this.keyboardEvents) {\n                  this.configureKeyboardInteraction();\n                }\n\n                this.configureDismissInteraction();\n                this.currentTransition = _present(this, 'popoverEnter', iosEnterAnimation, mdEnterAnimation, {\n                  event: event || this.event,\n                  size: this.size,\n                  trigger: this.triggerEl,\n                  reference: this.reference,\n                  side: this.side,\n                  align: this.alignment\n                });\n                _context4.next = 17;\n                return this.currentTransition;\n\n              case 17:\n                this.currentTransition = undefined;\n                /**\n                 * If popover is nested and was\n                 * presented using the \"Right\" arrow key,\n                 * we need to move focus to the first\n                 * descendant inside of the popover.\n                 */\n\n                if (this.focusDescendantOnPresent) {\n                  focusFirstDescendant(this.el, this.el);\n                }\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function present(_x4) {\n        return _present2.apply(this, arguments);\n      }\n\n      return present;\n    }()\n    /**\n     * Dismiss the popover overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the popover. For example, 'cancel' or 'backdrop'.\n     * @param dismissParentPopover If `true`, dismissing this popover will also dismiss\n     * a parent popover if this popover is nested. Defaults to `true`.\n     */\n\n  }, {\n    key: \"dismiss\",\n    value: function () {\n      var _dismiss2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(data, role) {\n        var dismissParentPopover,\n            destroyKeyboardInteraction,\n            destroyDismissInteraction,\n            shouldDismiss,\n            _this$getDelegate2,\n            delegate,\n            _args5 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                dismissParentPopover = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : true;\n\n                if (!(this.currentTransition !== undefined)) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                _context5.next = 4;\n                return this.currentTransition;\n\n              case 4:\n                destroyKeyboardInteraction = this.destroyKeyboardInteraction, destroyDismissInteraction = this.destroyDismissInteraction;\n\n                if (dismissParentPopover && this.parentPopover) {\n                  this.parentPopover.dismiss(data, role, dismissParentPopover);\n                }\n\n                this.currentTransition = _dismiss(this, data, role, 'popoverLeave', iosLeaveAnimation, mdLeaveAnimation, this.event);\n                _context5.next = 9;\n                return this.currentTransition;\n\n              case 9:\n                shouldDismiss = _context5.sent;\n\n                if (!shouldDismiss) {\n                  _context5.next = 16;\n                  break;\n                }\n\n                if (destroyKeyboardInteraction) {\n                  destroyKeyboardInteraction();\n                  this.destroyKeyboardInteraction = undefined;\n                }\n\n                if (destroyDismissInteraction) {\n                  destroyDismissInteraction();\n                  this.destroyDismissInteraction = undefined;\n                }\n                /**\n                 * If using popover inline\n                 * we potentially need to use the coreDelegate\n                 * so that this works in vanilla JS apps\n                 */\n\n\n                _this$getDelegate2 = this.getDelegate(), delegate = _this$getDelegate2.delegate;\n                _context5.next = 16;\n                return detachComponent(delegate, this.usersElement);\n\n              case 16:\n                this.currentTransition = undefined;\n                return _context5.abrupt(\"return\", shouldDismiss);\n\n              case 18:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function dismiss(_x5, _x6) {\n        return _dismiss2.apply(this, arguments);\n      }\n\n      return dismiss;\n    }()\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"getParentPopover\",\n    value: function () {\n      var _getParentPopover = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this.parentPopover);\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getParentPopover() {\n        return _getParentPopover.apply(this, arguments);\n      }\n\n      return getParentPopover;\n    }()\n    /**\n     * Returns a promise that resolves when the popover did dismiss.\n     */\n\n  }, {\n    key: \"onDidDismiss\",\n    value: function onDidDismiss() {\n      return eventMethod(this.el, 'ionPopoverDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the popover will dismiss.\n     */\n\n  }, {\n    key: \"onWillDismiss\",\n    value: function onWillDismiss() {\n      return eventMethod(this.el, 'ionPopoverWillDismiss');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _Object$assign,\n          _this3 = this;\n\n      var mode = getIonMode(this);\n      var onLifecycle = this.onLifecycle,\n          popoverId = this.popoverId,\n          parentPopover = this.parentPopover,\n          dismissOnSelect = this.dismissOnSelect,\n          side = this.side,\n          arrow = this.arrow,\n          htmlAttributes = this.htmlAttributes;\n      var desktop = isPlatform('desktop');\n      var enableArrow = arrow && !parentPopover;\n      return h(Host, Object.assign({\n        \"aria-modal\": \"true\",\n        \"no-router\": true,\n        tabindex: \"-1\"\n      }, htmlAttributes, {\n        style: {\n          zIndex: \"\".concat(20000 + this.overlayIndex)\n        },\n        id: popoverId,\n        class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), (_Object$assign = {}, _defineProperty(_Object$assign, mode, true), _defineProperty(_Object$assign, 'popover-translucent', this.translucent), _defineProperty(_Object$assign, 'overlay-hidden', true), _defineProperty(_Object$assign, 'popover-desktop', desktop), _defineProperty(_Object$assign, \"popover-side-\".concat(side), true), _defineProperty(_Object$assign, 'popover-nested', !!parentPopover), _Object$assign)),\n        onIonPopoverDidPresent: onLifecycle,\n        onIonPopoverWillPresent: onLifecycle,\n        onIonPopoverWillDismiss: onLifecycle,\n        onIonPopoverDidDismiss: onLifecycle,\n        onIonBackdropTap: this.onBackdropTap\n      }), !parentPopover && h(\"ion-backdrop\", {\n        tappable: this.backdropDismiss,\n        visible: this.showBackdrop,\n        part: \"backdrop\"\n      }), h(\"div\", {\n        class: \"popover-wrapper ion-overlay-wrapper\",\n        onClick: dismissOnSelect ? function () {\n          return _this3.dismiss();\n        } : undefined\n      }, enableArrow && h(\"div\", {\n        class: \"popover-arrow\",\n        part: \"arrow\"\n      }), h(\"div\", {\n        class: \"popover-content\",\n        part: \"content\"\n      }, h(\"slot\", null))));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"trigger\": [\"onTriggerChange\"],\n        \"triggerAction\": [\"onTriggerChange\"],\n        \"isOpen\": [\"onIsOpenChange\"]\n      };\n    }\n  }]);\n\n  return Popover;\n}();\n\nvar LIFECYCLE_MAP = {\n  ionPopoverDidPresent: 'ionViewDidEnter',\n  ionPopoverWillPresent: 'ionViewWillEnter',\n  ionPopoverWillDismiss: 'ionViewWillLeave',\n  ionPopoverDidDismiss: 'ionViewDidLeave'\n};\nvar popoverIds = 0;\nPopover.style = {\n  ios: popoverIosCss,\n  md: popoverMdCss\n};\nexport { Popover as ion_popover };","map":null,"metadata":{},"sourceType":"module"}